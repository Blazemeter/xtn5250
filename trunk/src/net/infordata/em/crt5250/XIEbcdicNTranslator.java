/*
Copyright 2007 Infordata S.p.A.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

/*
!!V 10/04/97 rel. 0.93 - moved to crt5250 package.
    16/04/97 rel. 0.94 - toPacked method added.
    28/04/97 rel. 0.94c- corrected problem with underscore.
    27/05/97 rel. 1.00 - first release.
    25/07/97 rel. 1.03a- '|' char mapping.
    03/03/98 rel. _.___- SWING and reorganization.
    ***
    30/06/98 rel. _.___- Swing, JBuilder2 e VSS.
 */
 
 
package net.infordata.em.crt5250;


/**
 * http://www-306.ibm.com/software/globalization/ccsid/ccsid_registered.jsp
 * @version
 * @author   Valentino Proietti - Infordata S.p.A.
 */
public class XIEbcdicNTranslator extends XIEbcdicTranslator {
  
  private final int[] ivEbcdicToChar;
  private final int[] ivCharToEbcdic = new int[1024 * 10];

  /**
   */
  protected XIEbcdicNTranslator(int[] ebcdic) {
    ivEbcdicToChar = ebcdic;
    for (int i = ivEbcdicToChar.length - 1; i >=0; i--)
      ivCharToEbcdic[ivEbcdicToChar[i]] = i;
  }


  /**
   * From ebcdic code to char
   */
  @Override
  public char toChar(byte aEbcdicChar) {
    return (char)ivEbcdicToChar[toInt(aEbcdicChar)];
  }


  /**
   * From char to ebcdic code
   */
  @Override
  public byte toEBCDIC(char aChar) {
    return (byte)ivCharToEbcdic[
        Math.max(0, Math.min(ivCharToEbcdic.length - 1, (int)aChar))];
  }
  
  //////
  
  private static class Euro extends XIEbcdicNTranslator {
    
    private final byte ivEbcdicEuro;
    
    protected Euro(int[] ebcdic, byte ebcdicEuro) {
      super(ebcdic);
      ivEbcdicEuro = ebcdicEuro;
    }

    @Override
    public char toChar(byte aEbcdicChar) {
      if (aEbcdicChar == ivEbcdicEuro)
        return '€';
      return super.toChar(aEbcdicChar);
    }
    @Override
    public byte toEBCDIC(char aChar) {
      if (aChar == '€')
        return ivEbcdicEuro;
      return super.toEBCDIC(aChar);
    }
  }
  
  //////
  
  private static final int[] CP37 = {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 160, 226, 228, 224, 225, 227, 229, /*  64 -  71  */
    231, 241, 162,  46,  60,  40,  43, 124, /*  72 -  79  */
    38, 233, 234, 235, 232, 237, 238, 239, /*  80 -  87  */
    236, 223,  33,  36,  42,  41,  59, 172, /*  88 -  95  */
    45,  47, 194, 196, 192, 193, 195, 197, /*  96 - 103  */
    199, 209, 166,  44,  37,  95,  62,  63, /* 104 - 111  */
    248, 201, 202, 203, 200, 205, 206, 207, /* 112 - 119  */
    204,  96,  58,  35,  64,  39,  61,  34, /* 120 - 127  */
    216,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 240, 253, 254, 177, /* 136 - 143  */
    176, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 170, 186, 230, 184, 198, 164, /* 152 - 159  */
    181, 126, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 161, 191, 208, 221, 222, 174, /* 168 - 175  */
    94, 163, 165, 183, 169, 167, 182, 188, /* 176 - 183  */
    189, 190,  91,  93, 175, 168, 180, 215, /* 184 - 191  */
    123,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 244, 246, 242, 243, 245, /* 200 - 207  */
    125,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 251, 252, 249, 250, 255, /* 216 - 223  */
    92, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 212, 214, 210, 211, 213, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 219, 220, 217, 218, 0, /* 248 - 255  */
  };
  
  private static final int[] CP273 = {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 160, 226, 123, 224, 225, 227, 229, /*  64 -  71  */
    231, 241, 196,  46,  60,  40,  43,  33, /*  72 -  79  */
    38, 233, 234, 235, 232, 237, 238, 239, /*  80 -  87  */
    236, 126, 220,  36,  42,  41,  59,  94, /*  88 -  95  */
    45,  47, 194,  91, 192, 193, 195, 197, /*  96 - 103  */
    199, 209, 246,  44,  37,  95,  62,  63, /* 104 - 111  */
    248, 201, 202, 203, 200, 205, 206, 207, /* 112 - 119  */
    204,  96,  58,  35, 167,  39,  61,  34, /* 120 - 127  */
    216,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 240, 253, 254, 177, /* 136 - 143  */
    176, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 170, 186, 230, 184, 198, 164, /* 152 - 159  */
    181, 223, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 161, 191, 208, 221, 222, 174, /* 168 - 175  */
    162, 163, 165, 183, 169,  64, 182, 188, /* 176 - 183  */
    189, 190, 172, 124, 175, 168, 180, 215, /* 184 - 191  */
    228,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 244, 166, 242, 243, 245, /* 200 - 207  */
    252,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 251, 125, 249, 250, 255, /* 216 - 223  */
    214, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 212,  92, 210, 211, 213, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 219,  93, 217, 218, 0, /* 248 - 255  */
  };
  
  private static final int[] CP277 = {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 160, 226, 228, 224, 225, 227, 125, /*  64 -  71  */
    231, 241,  35,  46,  60,  40,  43,  33, /*  72 -  79  */
    38, 233, 234, 235, 232, 237, 238, 239, /*  80 -  87  */
    236, 223, 164, 197,  42,  41,  59,  94, /*  88 -  95  */
    45,  47, 194, 196, 192, 193, 195,  36, /*  96 - 103  */
    199, 209, 248,  44,  37,  95,  62,  63, /* 104 - 111  */
    166, 201, 202, 203, 200, 205, 206, 207, /* 112 - 119  */
    204,  96,  58, 198, 216,  39,  61,  34, /* 120 - 127  */
    64,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 240, 253, 254, 177, /* 136 - 143  */
    176, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 170, 186, 123, 184,  91,  93, /* 152 - 159  */
    181, 252, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 161, 191, 208, 221, 222, 174, /* 168 - 175  */
    162, 163, 165, 183, 169, 167, 182, 188, /* 176 - 183  */
    189, 190, 172, 124, 175, 168, 180, 215, /* 184 - 191  */
    230,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 244, 246, 242, 243, 245, /* 200 - 207  */
    229,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 251, 126, 249, 250, 255, /* 216 - 223  */
    92, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 212, 214, 210, 211, 213, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 219, 220, 217, 218, 0, /* 248 - 255  */
  };

  private static final int[] CP278 =  {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 160, 226, 123, 224, 225, 227, 125, /*  64 -  71  */
    231, 241, 167,  46,  60,  40,  43,  33, /*  72 -  79  */
    38,  96, 234, 235, 232, 237, 238, 239, /*  80 -  87  */
    236, 223, 164, 197,  42,  41,  59,  94, /*  88 -  95  */
    45,  47, 194,  35, 192, 193, 195,  36, /*  96 - 103  */
    199, 209, 246,  44,  37,  95,  62,  63, /* 104 - 111  */
    248, 201, 202, 203, 200, 205, 206, 207, /* 112 - 119  */
    204, 233,  58, 196, 214,  39,  61,  34, /* 120 - 127  */
    216,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 240, 253, 254, 177, /* 136 - 143  */
    176, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 170, 186, 230, 184, 198,  93, /* 152 - 159  */
    181, 252, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 161, 191, 208, 221, 222, 174, /* 168 - 175  */
    162, 163, 165, 183, 169,  91, 182, 188, /* 176 - 183  */
    189, 190, 172, 124, 175, 168, 180, 215, /* 184 - 191  */
    228,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 244, 166, 242, 243, 245, /* 200 - 207  */
    229,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 251, 126, 249, 250, 255, /* 216 - 223  */
    92, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 212,  64, 210, 211, 213, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 219, 220, 217, 218, 0, /* 248 - 255  */
  };  

  private static final int[] CP280 = {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 160, 226, 228, 123, 225, 227, 229, /*  64 -  71  */
    92, 241, 176,  46,  60,  40,  43,  33, /*  72 -  79  */
    38,  93, 234, 235, 125, 237, 238, 239, /*  80 -  87  */
    126, 223, 233,  36,  42,  41,  59,  94, /*  88 -  95  */
    45,  47, 194, 196, 192, 193, 195, 197, /*  96 - 103  */
    199, 209, 242,  44,  37,  95,  62,  63, /* 104 - 111  */
    248, 201, 202, 203, 200, 205, 206, 207, /* 112 - 119  */
    204, 249,  58, 163, 167,  39,  61,  34, /* 120 - 127  */
    216,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 240, 253, 254, 177, /* 136 - 143  */
    91, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 170, 186, 230, 184, 198, 164, /* 152 - 159  */
    181, 236, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 161, 191, 208, 221, 222, 174, /* 168 - 175  */
    162,  35, 165, 183, 169,  64, 182, 188, /* 176 - 183  */
    189, 190, 172, 124, 175, 168, 180, 215, /* 184 - 191  */
    224,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 244, 246, 166, 243, 245, /* 200 - 207  */
    232,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 251, 252,  96, 250, 255, /* 216 - 223  */
    231, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 212, 214, 210, 211, 213, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 219, 220, 217, 218, 0, /* 248 - 255  */
  };

  private static final int[] CP284 =  {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 160, 226, 228, 224, 225, 227, 229, /*  64 -  71  */
    231, 166,  91,  46,  60,  40,  43, 124, /*  72 -  79  */
    38, 233, 234, 235, 232, 237, 238, 239, /*  80 -  87  */
    236, 223,  93,  36,  42,  41,  59, 172, /*  88 -  95  */
    45,  47, 194, 196, 192, 193, 195, 197, /*  96 - 103  */
    199,  35, 241,  44,  37,  95,  62,  63, /* 104 - 111  */
    248, 201, 202, 203, 200, 205, 206, 207, /* 112 - 119  */
    204,  96,  58, 209,  64,  39,  61,  34, /* 120 - 127  */
    216,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 240, 253, 254, 177, /* 136 - 143  */
    176, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 170, 186, 230, 184, 198, 164, /* 152 - 159  */
    181, 168, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 161, 191, 208, 221, 222, 174, /* 168 - 175  */
    162, 163, 165, 183, 169, 167, 182, 188, /* 176 - 183  */
    189, 190,  94,  33, 175, 126, 180, 215, /* 184 - 191  */
    123,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 244, 246, 242, 243, 245, /* 200 - 207  */
    125,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 251, 252, 249, 250, 255, /* 216 - 223  */
    92, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 212, 214, 210, 211, 213, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 219, 220, 217, 218, 0, /* 248 - 255  */
  };
  
  private static final int[] CP285 = {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 160, 226, 228, 224, 225, 227, 229, /*  64 -  71  */
    231, 241,  36,  46,  60,  40,  43, 124, /*  72 -  79  */
    38, 233, 234, 235, 232, 237, 238, 239, /*  80 -  87  */
    236, 223,  33, 163,  42,  41,  59, 172, /*  88 -  95  */
    45,  47, 194, 196, 192, 193, 195, 197, /*  96 - 103  */
    199, 209, 166,  44,  37,  95,  62,  63, /* 104 - 111  */
    248, 201, 202, 203, 200, 205, 206, 207, /* 112 - 119  */
    204,  96,  58,  35,  64,  39,  61,  34, /* 120 - 127  */
    216,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 240, 253, 254, 177, /* 136 - 143  */
    176, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 170, 186, 230, 184, 198, 164, /* 152 - 159  */
    181, 175, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 161, 191, 208, 221, 222, 174, /* 168 - 175  */
    162,  91, 165, 183, 169, 167, 182, 188, /* 176 - 183  */
    189, 190,  94,  93, 126, 168, 180, 215, /* 184 - 191  */
    123,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 244, 246, 242, 243, 245, /* 200 - 207  */
    125,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 251, 252, 249, 250, 255, /* 216 - 223  */
    92, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 212, 214, 210, 211, 213, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 219, 220, 217, 218, 0, /* 248 - 255  */
  };
  
  private static final int[] CP297 =  {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 160, 226, 228,  64, 225, 227, 229, /*  64 -  71  */
    92, 241, 176,  46,  60,  40,  43,  33, /*  72 -  79  */
    38, 123, 234, 235, 125, 237, 238, 239, /*  80 -  87  */
    236, 223, 167,  36,  42,  41,  59,  94, /*  88 -  95  */
    45,  47, 194, 196, 192, 193, 195, 197, /*  96 - 103  */
    199, 209, 249,  44,  37,  95,  62,  63, /* 104 - 111  */
    248, 201, 202, 203, 200, 205, 206, 207, /* 112 - 119  */
    204, 181,  58, 163, 224,  39,  61,  34, /* 120 - 127  */
    216,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 240, 253, 254, 177, /* 136 - 143  */
    91, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 170, 186, 230, 184, 198, 164, /* 152 - 159  */
    96, 168, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 161, 191, 208, 221, 222, 174, /* 168 - 175  */
    162,  35, 165, 183, 169,  93, 182, 188, /* 176 - 183  */
    189, 190, 172, 124, 175, 126, 180, 215, /* 184 - 191  */
    233,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 244, 246, 242, 243, 245, /* 200 - 207  */
    232,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 251, 252, 166, 250, 255, /* 216 - 223  */
    231, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 212, 214, 210, 211, 213, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 219, 220, 217, 218, 0, /* 248 - 255  */
  };
  
  private static final int[] CP424 = {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 193, 194, 195, 196, 197, 198, 199, /*  64 -  71  */
    200, 201, 162,  46,  60,  40,  43, 124, /*  72 -  79  */
    38, 216, 217, 226, 227, 228, 229, 230, /*  80 -  87  */
    231, 232,  33,  36,  42,  41,  59, 172, /*  88 -  95  */
    45,  47, 233, 192, 186, 161, 210, 191, /*  96 - 103  */
    212, 213, 166,  44,  37,  95,  62,  63, /* 104 - 111  */
    242, 248, 249, 209, 160, 255, 234, 241, /* 112 - 119  */
    177,  96,  58,  35,  64,  39,  61,  34, /* 120 - 127  */
    214,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 246, 211, 243, 208, /* 136 - 143  */
    176, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 218, 240, 225, 184, 245, 164, /* 152 - 159  */
    181, 126, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 170, 224, 244, 202, 175, 174, /* 168 - 175  */
    94, 163, 165, 183, 169, 167, 182, 188, /* 176 - 183  */
    189, 190,  91,  93, 250, 168, 180, 215, /* 184 - 191  */
    123,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 203, 204, 205, 206, 207, /* 200 - 207  */
    125,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 219, 220, 221, 222, 223, /* 216 - 223  */
    92, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 235, 236, 237, 238, 239, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 251, 252, 253, 254, 0, /* 248 - 255  */
  };
  
  private static final int[] CP500 = {
    0,   1,   2,   3, 156,   9, 134, 127, /*   0 -   7  */
    151, 141, 142,  11,  12,  13,  14,  15, /*   8 -  15  */
    16,  17,  18,  19, 157, 133,   8, 135, /*  16 -  23  */
    24,  25, 146, 143,  28,  29,  30,  31, /*  24 -  31  */
    128, 129, 130, 131, 132,  10,  23,  27, /*  32 -  39  */
    136, 137, 138, 139, 140,   5,   6,   7, /*  40 -  47  */
    144, 145,  22, 147, 148, 149, 150,   4, /*  48 -  55  */
    152, 153, 154, 155,  20,  21, 158,  26, /*  56 -  63  */
    32, 160, 226, 228, 224, 225, 227, 229, /*  64 -  71  */
    231, 241,  91,  46,  60,  40,  43,  33, /*  72 -  79  */
    38, 233, 234, 235, 232, 237, 238, 239, /*  80 -  87  */
    236, 223,  93,  36,  42,  41,  59,  94, /*  88 -  95  */
    45,  47, 194, 196, 192, 193, 195, 197, /*  96 - 103  */
    199, 209, 166,  44,  37,  95,  62,  63, /* 104 - 111  */
    248, 201, 202, 203, 200, 205, 206, 207, /* 112 - 119  */
    204,  96,  58,  35,  64,  39,  61,  34, /* 120 - 127  */
    216,  97,  98,  99, 100, 101, 102, 103, /* 128 - 135  */
    104, 105, 171, 187, 240, 253, 254, 177, /* 136 - 143  */
    176, 106, 107, 108, 109, 110, 111, 112, /* 144 - 151  */
    113, 114, 170, 186, 230, 184, 198, 164, /* 152 - 159  */
    181, 126, 115, 116, 117, 118, 119, 120, /* 160 - 167  */
    121, 122, 161, 191, 208, 221, 222, 174, /* 168 - 175  */
    162, 163, 165, 183, 169, 167, 182, 188, /* 176 - 183  */
    189, 190, 172, 124, 175, 168, 180, 215, /* 184 - 191  */
    123,  65,  66,  67,  68,  69,  70,  71, /* 192 - 199  */
    72,  73, 173, 244, 246, 242, 243, 245, /* 200 - 207  */
    125,  74,  75,  76,  77,  78,  79,  80, /* 208 - 215  */
    81,  82, 185, 251, 252, 249, 250, 255, /* 216 - 223  */
    92, 247,  83,  84,  85,  86,  87,  88, /* 224 - 231  */
    89,  90, 178, 212, 214, 210, 211, 213, /* 232 - 239  */
    48,  49,  50,  51,  52,  53,  54,  55, /* 240 - 247  */
    56,  57, 179, 219, 220, 217, 218, 0, /* 248 - 255  */
  };
  
  private static final int[] CP850 = {
    0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 
      '\b',   '\t',   '\n', 0x000B,   '\f',   '\r', 0x000E, 0x000F,
    0x0010, 0x0011, 0x0012, 0x0013, 0x0014, 0x0015, 0x0016, 0x0017, 
    0x0018, 0x0019, 0x001C, 0x001B, 0x007F, 0x001D, 0x001E, 0x001F,
    0x0020, 0x0021,   '\"', 0x0023, 0x0024, 0x0025, 0x0026,   '\'',
    0x0028, 0x0029, 0x002A, 0x002B, 0x002C, 0x002D, 0x002E, 0x002F,
    0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 
    0x0038, 0x0039, 0x003A, 0x003B, 0x003C, 0x003D, 0x003E, 0x003F,
    0x0040, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047,
    0x0048, 0x0049, 0x004A, 0x004B, 0x004C, 0x004D, 0x004E, 0x004F,
    0x0050, 0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 
    0x0058, 0x0059, 0x005A, 0x005B,   '\\', 0x005D, 0x005E, 0x005F,
    0x0060, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 
    0x0068, 0x0069, 0x006A, 0x006B, 0x006C, 0x006D, 0x006E, 0x006F,
    0x0070, 0x0071, 0x0072, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 
    0x0078, 0x0079, 0x007A, 0x007B, 0x007C, 0x007D, 0x007E, 0x001A,
    0x00C7, 0x00FC, 0x00E9, 0x00E2, 0x00E4, 0x00E0, 0x00E5, 0x00E7, 
    0x00EA, 0x00EB, 0x00E8, 0x00EF, 0x00EE, 0x00EC, 0x00C4, 0x00C5,
    0x00C9, 0x00E6, 0x00C6, 0x00F4, 0x00F6, 0x00F2, 0x00FB, 0x00F9, 
    0x00FF, 0x00D6, 0x00DC, 0x00F8, 0x00A3, 0x00D8, 0x00D7, 0x0192,
    0x00E1, 0x00ED, 0x00F3, 0x00FA, 0x00F1, 0x00D1, 0x00AA, 0x00BA, 
    0x00BF, 0x00AE, 0x00AC, 0x00BD, 0x00BC, 0x00A1, 0x00AB, 0x00BB,
    0x2591, 0x2592, 0x2593, 0x2502, 0x2524, 0x00C1, 0x00C2, 0x00C0, 
    0x00A9, 0x2563, 0x2551, 0x2557, 0x255D, 0x00A2, 0x00A5, 0x2510,
    0x2514, 0x2534, 0x252C, 0x251C, 0x2500, 0x253C, 0x00E3, 0x00C3, 
    0x255A, 0x2554, 0x2569, 0x2566, 0x2560, 0x2550, 0x256C, 0x00A4,
    0x00F0, 0x00D0, 0x00CA, 0x00CB, 0x00C8, 0x0131, 0x00CD, 0x00CE, 
    0x00CF, 0x2518, 0x250C, 0x2588, 0x2584, 0x00A6, 0x00CC, 0x2580,
    0x00D3, 0x00DF, 0x00D4, 0x00D2, 0x00F5, 0x00D5, 0x00B5, 0x00FE, 
    0x00DE, 0x00DA, 0x00DB, 0x00D9, 0x00FD, 0x00DD, 0x00AF, 0x00B4,
    0x00AD, 0x00B1, 0x2017, 0x00BE, 0x00B6, 0x00A7, 0x00F7, 0x00B8, 
    0x00B0, 0x00A8, 0x00B7, 0x00B9, 0x00B3, 0x00B2, 0x25A0, 0x00A0,
  };
  
  private static final int[] CP870 = {
    0x0000, 0x0001, 0x0002, 0x0003, 0x009C,   '\t', 0x0086, 0x007F, 
    0x0097, 0x008D, 0x008E, 0x000B,   '\f',   '\r', 0x000E, 0x000F,
    0x0010, 0x0011, 0x0012, 0x0013, 0x009D, 0x0085,   '\b', 0x0087, 
    0x0018, 0x0019, 0x0092, 0x008F, 0x001C, 0x001D, 0x001E, 0x001F,
    0x0080, 0x0081, 0x0082, 0x0083, 0x0084,   '\n', 0x0017, 0x001B, 
    0x0088, 0x0089, 0x008A, 0x008B, 0x008C, 0x0005, 0x0006, 0x0007,
    0x0090, 0x0091, 0x0016, 0x0093, 0x0094, 0x0095, 0x0096, 0x0004, 
    0x0098, 0x0099, 0x009A, 0x009B, 0x0014, 0x0015, 0x009E, 0x001A,
    0x0020, 0x00A0, 0x00E2, 0x00E4, 0x0163, 0x00E1, 0x0103, 0x010D, 
    0x00E7, 0x0107, 0x005B, 0x002E, 0x003C, 0x0028, 0x002B, 0x0021,
    0x0026, 0x00E9, 0x0119, 0x00EB, 0x016F, 0x00ED, 0x00EE, 0x013E, 
    0x013A, 0x00DF, 0x005D, 0x0024, 0x002A, 0x0029, 0x003B, 0x005E,
    0x002D, 0x002F, 0x00C2, 0x00C4, 0x02DD, 0x00C1, 0x0102, 0x010C, 
    0x00C7, 0x0106, 0x007C, 0x002C, 0x0025, 0x005F, 0x003E, 0x003F,
    0x02C7, 0x00C9, 0x0118, 0x00CB, 0x016E, 0x00CD, 0x00CE, 0x013D, 
    0x0139, 0x0060, 0x003A, 0x0023, 0x0040,   '\'', 0x003D,   '\"',
    0x02D8, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 
    0x0068, 0x0069, 0x015B, 0x0148, 0x0111, 0x00FD, 0x0159, 0x015F,
    0x00B0, 0x006A, 0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 
    0x0071, 0x0072, 0x0142, 0x0144, 0x0161, 0x00B8, 0x02DB, 0x00A4,
    0x0105, 0x007E, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 0x0078, 
    0x0079, 0x007A, 0x015A, 0x0147, 0x0110, 0x00DD, 0x0158, 0x015E,
    0x02D9, 0x0104, 0x017C, 0x0162, 0x017B, 0x00A7, 0x017E, 0x017A, 
    0x017D, 0x0179, 0x0141, 0x0143, 0x0160, 0x00A8, 0x00B4, 0x00D7,
    0x007B, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 
    0x0048, 0x0049, 0x00AD, 0x00F4, 0x00F6, 0x0155, 0x00F3, 0x0151,
    0x007D, 0x004A, 0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 
    0x0051, 0x0052, 0x011A, 0x0171, 0x00FC, 0x0165, 0x00FA, 0x011B,
      '\\', 0x00F7, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058, 
    0x0059, 0x005A, 0x010F, 0x00D4, 0x00D6, 0x0154, 0x00D3, 0x0150,
    0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 
    0x0038, 0x0039, 0x010E, 0x0170, 0x00DC, 0x0164, 0x00DA, 0x009F,
  };
  
  private static final int[] CP838 = {
    0x0000, 0x0001, 0x0002, 0x0003, 0x009C,   '\t', 0x0086, 0x007F, 
    0x0097, 0x008D, 0x008E, 0x000B,   '\f',   '\r', 0x000E, 0x000F,
    0x0010, 0x0011, 0x0012, 0x0013, 0x009D, 0x0085,   '\b', 0x0087, 
    0x0018, 0x0019, 0x0092, 0x008F, 0x001C, 0x001D, 0x001E, 0x001F,
    0x0080, 0x0081, 0x0082, 0x0083, 0x0084,   '\n', 0x0017, 0x001B, 
    0x0088, 0x0089, 0x008A, 0x008B, 0x008C, 0x0005, 0x0006, 0x0007,
    0x0090, 0x0091, 0x0016, 0x0093, 0x0094, 0x0095, 0x0096, 0x0004, 
    0x0098, 0x0099, 0x009A, 0x009B, 0x0014, 0x0015, 0x009E, 0x001A,
    0x0020, 0x00A0, 0x0E01, 0x0E02, 0x0E03, 0x0E04, 0x0E05, 0x0E06, 
    0x0E07, 0x005B, 0x00A2, 0x002E, 0x003C, 0x0028, 0x002B, 0x007C,
    0x0026, 0x0E48, 0x0E08, 0x0E09, 0x0E0A, 0x0E0B, 0x0E0C, 0x0E0D, 
    0x0E0E, 0x005D, 0x0021, 0x0024, 0x002A, 0x0029, 0x003B, 0x00AC,
    0x002D, 0x002F, 0x0E0F, 0x0E10, 0x0E11, 0x0E12, 0x0E13, 0x0E14, 
    0x0E15, 0x005E, 0x00A6, 0x002C, 0x0025, 0x005F, 0x003E, 0x003F,
    0x0E3F, 0x0E4E, 0x0E16, 0x0E17, 0x0E18, 0x0E19, 0x0E1A, 0x0E1B, 
    0x0E1C, 0x0060, 0x003A, 0x0023, 0x0040,   '\'', 0x003D,   '\"',
    0x0E4F, 0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 
    0x0068, 0x0069, 0x0E1D, 0x0E1E, 0x0E1F, 0x0E20, 0x0E21, 0x0E22,
    0x0E5A, 0x006A, 0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, 
    0x0071, 0x0072, 0x0E23, 0x0E24, 0x0E25, 0x0E26, 0x0E27, 0x0E28,
    0x0E5B, 0x007E, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 0x0078, 
    0x0079, 0x007A, 0x0E29, 0x0E2A, 0x0E2B, 0x0E2C, 0x0E2D, 0x0E2E,
    0x0E50, 0x0E51, 0x0E52, 0x0E53, 0x0E54, 0x0E55, 0x0E56, 0x0E57, 
    0x0E58, 0x0E59, 0x0E2F, 0x0E30, 0x0E31, 0x0E32, 0x0E33, 0x0E34,
    0x007B, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 
    0x0048, 0x0049, 0x0E49, 0x0E35, 0x0E36, 0x0E37, 0x0E38, 0x0E39,
    0x007D, 0x004A, 0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, 
    0x0051, 0x0052, 0x0E3A, 0x0E40, 0x0E41, 0x0E42, 0x0E43, 0x0E44,
      '\\', 0x0E4A, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058, 
    0x0059, 0x005A, 0x0E45, 0x0E46, 0x0E47, 0x0E48, 0x0E49, 0x0E4A,
    0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 
    0x0038, 0x0039, 0x0E4B, 0x0E4C, 0x0E4D, 0x0E4B, 0x0E4C, 0x009F
  };
  
  public static final XIEbcdicNTranslator TRANSLATOR_CP37 = 
    new XIEbcdicNTranslator(CP37);
  public static final XIEbcdicNTranslator TRANSLATOR_CP273 = 
    new XIEbcdicNTranslator(CP273);
  public static final XIEbcdicNTranslator TRANSLATOR_CP277 = 
    new XIEbcdicNTranslator(CP277);
  public static final XIEbcdicNTranslator TRANSLATOR_CP278 = 
    new XIEbcdicNTranslator(CP278);
  public static final XIEbcdicNTranslator TRANSLATOR_CP280 = 
    new XIEbcdicNTranslator(CP280);
  public static final XIEbcdicNTranslator TRANSLATOR_CP284 = 
    new XIEbcdicNTranslator(CP284);
  public static final XIEbcdicNTranslator TRANSLATOR_CP285 = 
    new XIEbcdicNTranslator(CP285);
  public static final XIEbcdicNTranslator TRANSLATOR_CP297 = 
    new XIEbcdicNTranslator(CP297);
  public static final XIEbcdicNTranslator TRANSLATOR_CP424 = 
    new XIEbcdicNTranslator(CP424);
  public static final XIEbcdicNTranslator TRANSLATOR_CP500 = 
    new XIEbcdicNTranslator(CP500);
  public static final XIEbcdicNTranslator TRANSLATOR_CP850 = 
    new XIEbcdicNTranslator(CP850);
  public static final XIEbcdicNTranslator TRANSLATOR_CP870 = 
    new XIEbcdicNTranslator(CP870);
  public static final XIEbcdicNTranslator TRANSLATOR_CP838 = 
    new XIEbcdicNTranslator(CP838);
  // Derived with €
  public static final XIEbcdicNTranslator TRANSLATOR_CP1140 = 
    new XIEbcdicNTranslator.Euro(CP37, (byte)159);
  public static final XIEbcdicNTranslator TRANSLATOR_CP1141 = 
    new XIEbcdicNTranslator.Euro(CP273, (byte)159);
  public static final XIEbcdicNTranslator TRANSLATOR_CP1144 = 
    new XIEbcdicNTranslator.Euro(CP280, (byte)159);
  public static final XIEbcdicNTranslator TRANSLATOR_CP1147 = 
    new XIEbcdicNTranslator.Euro(CP297, (byte)159);
  public static final XIEbcdicNTranslator TRANSLATOR_CP1153 = 
    new XIEbcdicNTranslator.Euro(CP870, (byte)159);
  public static final XIEbcdicNTranslator TRANSLATOR_CP1160 = 
    new XIEbcdicNTranslator.Euro(CP838, (byte)0xFE);
}
